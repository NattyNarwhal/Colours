
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;
	
	private global::Gtk.Action EditAction;
	
	private global::Gtk.Action ColorAction;
	
	private global::Gtk.Action undoAction;
	
	private global::Gtk.Action redoAction;
	
	private global::Gtk.Action CopyHexAction;
	
	private global::Gtk.Action CopyRGBAction;
	
	private global::Gtk.Action CopyHSLAction;
	
	private global::Gtk.Action CopyHSVAction;
	
	private global::Gtk.Action pasteAction;
	
	private global::Gtk.Action RandomAction;
	
	private global::Gtk.Action BrightenAction;
	
	private global::Gtk.Action DarkenAction;
	
	private global::Gtk.Action SaturateAction;
	
	private global::Gtk.Action DesaturateAction;
	
	private global::Gtk.Action InvertAction;
	
	private global::Gtk.VBox mainVbox;
	
	private global::Gtk.MenuBar menubar1;
	
	private global::Gtk.ComboBox schemeBox;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.EditAction = new global::Gtk.Action ("EditAction", global::Mono.Unix.Catalog.GetString ("_Edit"), null, null);
		this.EditAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Edit");
		w1.Add (this.EditAction, null);
		this.ColorAction = new global::Gtk.Action ("ColorAction", global::Mono.Unix.Catalog.GetString ("_Color"), null, null);
		this.ColorAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Color");
		w1.Add (this.ColorAction, null);
		this.undoAction = new global::Gtk.Action ("undoAction", global::Mono.Unix.Catalog.GetString ("_Undo"), null, "gtk-undo");
		this.undoAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Undo");
		w1.Add (this.undoAction, null);
		this.redoAction = new global::Gtk.Action ("redoAction", global::Mono.Unix.Catalog.GetString ("_Redo"), null, "gtk-redo");
		this.redoAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Redo");
		w1.Add (this.redoAction, null);
		this.CopyHexAction = new global::Gtk.Action ("CopyHexAction", global::Mono.Unix.Catalog.GetString ("Copy He_x"), null, null);
		this.CopyHexAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Copy He_x");
		w1.Add (this.CopyHexAction, null);
		this.CopyRGBAction = new global::Gtk.Action ("CopyRGBAction", global::Mono.Unix.Catalog.GetString ("Copy _RGB"), null, null);
		this.CopyRGBAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Copy _RGB");
		w1.Add (this.CopyRGBAction, null);
		this.CopyHSLAction = new global::Gtk.Action ("CopyHSLAction", global::Mono.Unix.Catalog.GetString ("Copy HS_L"), null, null);
		this.CopyHSLAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Copy HS_L");
		w1.Add (this.CopyHSLAction, null);
		this.CopyHSVAction = new global::Gtk.Action ("CopyHSVAction", global::Mono.Unix.Catalog.GetString ("Copy HS_V"), null, null);
		this.CopyHSVAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Copy HS_V");
		w1.Add (this.CopyHSVAction, null);
		this.pasteAction = new global::Gtk.Action ("pasteAction", global::Mono.Unix.Catalog.GetString ("_Paste"), null, "gtk-paste");
		this.pasteAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Paste");
		w1.Add (this.pasteAction, null);
		this.RandomAction = new global::Gtk.Action ("RandomAction", global::Mono.Unix.Catalog.GetString ("Rando_m"), null, null);
		this.RandomAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Rando_m");
		w1.Add (this.RandomAction, null);
		this.BrightenAction = new global::Gtk.Action ("BrightenAction", global::Mono.Unix.Catalog.GetString ("_Brighten"), null, null);
		this.BrightenAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Brighten");
		w1.Add (this.BrightenAction, null);
		this.DarkenAction = new global::Gtk.Action ("DarkenAction", global::Mono.Unix.Catalog.GetString ("Dar_ken"), null, null);
		this.DarkenAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Dar_ken");
		w1.Add (this.DarkenAction, null);
		this.SaturateAction = new global::Gtk.Action ("SaturateAction", global::Mono.Unix.Catalog.GetString ("_Saturate"), null, null);
		this.SaturateAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Saturate");
		w1.Add (this.SaturateAction, null);
		this.DesaturateAction = new global::Gtk.Action ("DesaturateAction", global::Mono.Unix.Catalog.GetString ("_Desaturate"), null, null);
		this.DesaturateAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Desaturate");
		w1.Add (this.DesaturateAction, null);
		this.InvertAction = new global::Gtk.Action ("InvertAction", global::Mono.Unix.Catalog.GetString ("_Invert"), null, null);
		this.InvertAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Invert");
		w1.Add (this.InvertAction, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("MainWindow");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.mainVbox = new global::Gtk.VBox ();
		this.mainVbox.Name = "mainVbox";
		this.mainVbox.Spacing = 6;
		// Container child mainVbox.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString (@"<ui><menubar name='menubar1'><menu name='EditAction' action='EditAction'><menuitem name='undoAction' action='undoAction'/><menuitem name='redoAction' action='redoAction'/><separator/><menuitem name='CopyHexAction' action='CopyHexAction'/><menuitem name='CopyRGBAction' action='CopyRGBAction'/><menuitem name='CopyHSLAction' action='CopyHSLAction'/><menuitem name='CopyHSVAction' action='CopyHSVAction'/><separator/><menuitem name='pasteAction' action='pasteAction'/><menuitem name='RandomAction' action='RandomAction'/></menu><menu name='ColorAction' action='ColorAction'><menuitem name='BrightenAction' action='BrightenAction'/><menuitem name='DarkenAction' action='DarkenAction'/><separator/><menuitem name='SaturateAction' action='SaturateAction'/><menuitem name='DesaturateAction' action='DesaturateAction'/><separator/><menuitem name='InvertAction' action='InvertAction'/></menu></menubar></ui>");
		this.menubar1 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar1")));
		this.menubar1.Name = "menubar1";
		this.mainVbox.Add (this.menubar1);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.mainVbox [this.menubar1]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child mainVbox.Gtk.Box+BoxChild
		this.schemeBox = global::Gtk.ComboBox.NewText ();
		this.schemeBox.AppendText (global::Mono.Unix.Catalog.GetString ("Complement"));
		this.schemeBox.AppendText (global::Mono.Unix.Catalog.GetString ("Split Complements"));
		this.schemeBox.AppendText (global::Mono.Unix.Catalog.GetString ("Triads"));
		this.schemeBox.AppendText (global::Mono.Unix.Catalog.GetString ("Tetrads"));
		this.schemeBox.AppendText (global::Mono.Unix.Catalog.GetString ("Analogous"));
		this.schemeBox.AppendText (global::Mono.Unix.Catalog.GetString ("Monochromatic"));
		this.schemeBox.Name = "schemeBox";
		this.schemeBox.Active = 0;
		this.mainVbox.Add (this.schemeBox);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.mainVbox [this.schemeBox]));
		w3.Position = 1;
		w3.Expand = false;
		w3.Fill = false;
		this.Add (this.mainVbox);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 644;
		this.DefaultHeight = 315;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.undoAction.Activated += new global::System.EventHandler (this.OnUndoActionActivated);
		this.redoAction.Activated += new global::System.EventHandler (this.OnRedoActionActivated);
		this.CopyHexAction.Activated += new global::System.EventHandler (this.OnCopyHexActionActivated);
		this.CopyRGBAction.Activated += new global::System.EventHandler (this.OnCopyRGBActionActivated);
		this.CopyHSLAction.Activated += new global::System.EventHandler (this.OnCopyHSLActionActivated);
		this.CopyHSVAction.Activated += new global::System.EventHandler (this.OnCopyHSVActionActivated);
		this.pasteAction.Activated += new global::System.EventHandler (this.OnPasteActionActivated);
		this.RandomAction.Activated += new global::System.EventHandler (this.OnRandomActionActivated);
		this.BrightenAction.Activated += new global::System.EventHandler (this.OnBrightenActionActivated);
		this.DarkenAction.Activated += new global::System.EventHandler (this.OnDarkenActionActivated);
		this.SaturateAction.Activated += new global::System.EventHandler (this.OnSaturateActionActivated);
		this.DesaturateAction.Activated += new global::System.EventHandler (this.OnDesaturateActionActivated);
		this.InvertAction.Activated += new global::System.EventHandler (this.OnInvertActionActivated);
		this.schemeBox.Changed += new global::System.EventHandler (this.OnSchemeBoxChanged);
	}
}
